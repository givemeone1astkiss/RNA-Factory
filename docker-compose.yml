# Docker Compose configuration for RNA-Factory
# Use this for local development and testing

version: '3.8'

services:
  # Main application
  rna-factory:
    build: .
    container_name: rna-factory-app
    ports:
      - "8000:8000"
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=development
      - PYTHONPATH=/app
      - DEEPSEEK_API_KEY=sk-7a86aa9650be47c2ac08d877bc038216
      - DEEPSEEK_API_BASE=https://api.deepseek.com
      - DEEPSEEK_API_VERSION=v1
    volumes:
      # Mount source code for development (comment out for production)
      - ./app:/app/app
      - ./models:/app/models
      - ./run.py:/app/run.py
      - ./config.py:/app/config.py
      # Mount uploads directory
      - ./app/static/uploads:/app/app/static/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - rna-factory-network

  # Redis for caching and session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: rna-factory-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - rna-factory-network

  # PostgreSQL for database (optional)
  postgres:
    image: postgres:15-alpine
    container_name: rna-factory-db
    environment:
      POSTGRES_DB: rna_factory
      POSTGRES_USER: rna_user
      POSTGRES_PASSWORD: rna_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - rna-factory-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: rna-factory-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - rna-factory
    restart: unless-stopped
    networks:
      - rna-factory-network

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: rna-factory-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - rna-factory-network

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: rna-factory-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - rna-factory-network

# Networks
networks:
  rna-factory-network:
    driver: bridge

# Volumes
volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
